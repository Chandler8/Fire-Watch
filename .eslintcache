[{"C:\\Users\\clowr\\Desktop\\code\\Fire-Watch\\src\\index.js":"1","C:\\Users\\clowr\\Desktop\\code\\Fire-Watch\\src\\reportWebVitals.js":"2","C:\\Users\\clowr\\Desktop\\code\\Fire-Watch\\src\\App.js":"3","C:\\Users\\clowr\\Desktop\\code\\Fire-Watch\\src\\components\\Map.js":"4","C:\\Users\\clowr\\Desktop\\code\\Fire-Watch\\src\\components\\LocationMarker.js":"5","C:\\Users\\clowr\\Desktop\\code\\Fire-Watch\\src\\components\\Loader.js":"6","C:\\Users\\clowr\\Desktop\\code\\Fire-Watch\\src\\components\\LocationInfoBox.js":"7","C:\\Users\\clowr\\Desktop\\code\\Fire-Watch\\src\\components\\Header.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":997,"mtime":1612232161316,"results":"12","hashOfConfig":"10"},{"size":1331,"mtime":1612232569254,"results":"13","hashOfConfig":"10"},{"size":383,"mtime":1612213625997,"results":"14","hashOfConfig":"10"},{"size":250,"mtime":1612216293605,"results":"15","hashOfConfig":"10"},{"size":372,"mtime":1612230937207,"results":"16","hashOfConfig":"10"},{"size":355,"mtime":1612233340306,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1g1rvbf",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\clowr\\Desktop\\code\\Fire-Watch\\src\\index.js",[],["37","38"],"C:\\Users\\clowr\\Desktop\\code\\Fire-Watch\\src\\reportWebVitals.js",[],"C:\\Users\\clowr\\Desktop\\code\\Fire-Watch\\src\\App.js",["39"],"import { useState, useEffect } from 'react'\n\nimport Map from './components/Map'\nimport Loader from './components/Loader'\nimport Header from './components/Header'\n\n\n\nfunction App() {\n  const [eventData, setEventData] = useState([])\n  const [loading, setLoading] = useState(false)\n\n  // Use Async await here with fetch for the NASA API\n  useEffect(() => {\n    const fetchEvents = async () => {\n      setLoading(true)\n      const res = await fetch('https://eonet.sci.gsfc.nasa.gov/api/v2.1/events')\n      // Destructure here to just pull targeted information we need, in this case, just events\n      const { events } = await res.json()\n\n      setEventData(events)\n      setLoading(false)\n\n    }\n\n    fetchEvents()\n    // Add dependency array as 2nd argument below, it will be set as empty\n\n    console.log(eventData);\n  }, [])\n\n// Create a loading expression\n  return (\n    <div>\n      <Header />\n      { !loading ? <Map eventData={eventData} /> : <Loader /> }\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\clowr\\Desktop\\code\\Fire-Watch\\src\\components\\Map.js",["40"],"// yes\r\n\r\nimport { useState } from 'react'\r\nimport GoogleMapReact from 'google-map-react'\r\nimport LocationMarker from './LocationMarker'\r\nimport LocationInfoBox from './LocationInfoBox'\r\n\r\n// Loop through the location marker and retrieve the data for each event we want to highlight\r\nconst Map = ({ eventData, center, zoom }) => {\r\n    const [locationInfo, setLocationInfo] = useState(null)\r\n\r\n\r\n\r\n    const markers = eventData.map(ev => {\r\n        if(ev.categories[0].id === 8) {\r\n            return  <LocationMarker lat={ev.geometries[0].coordinates[1]}  lng={ev.geometries[0].coordinates[0]} \r\n            onClick={() => setLocationInfo ({ id: ev.id, title: ev.title })} />\r\n        }\r\n    })\r\n\r\n\r\n    return (\r\n        <div className=\"map\">\r\n            <GoogleMapReact\r\n            bootstrapURLKeys= {{ key: 'AIzaSyAE7idgWTmvdPfyNdSz16e9ln4mzffbKmU'}}\r\n            defaultCenter={ center }\r\n            defaultZoom={ zoom }\r\n            >\r\n               {markers}\r\n                </GoogleMapReact>\r\n                {locationInfo && <LocationInfoBox info={locationInfo} />}\r\n        </div>\r\n    )\r\n}\r\n\r\n// This location can be edited, it is just a spot in California near common Wildfire zones\r\nMap.defaultProps = {\r\n    center: {\r\n        lat: 39.8283, \r\n        lng: -98.5795\r\n    },\r\n    zoom: 4\r\n}\r\n\r\nexport default Map\r\n","C:\\Users\\clowr\\Desktop\\code\\Fire-Watch\\src\\components\\LocationMarker.js",[],"C:\\Users\\clowr\\Desktop\\code\\Fire-Watch\\src\\components\\Loader.js",[],"C:\\Users\\clowr\\Desktop\\code\\Fire-Watch\\src\\components\\LocationInfoBox.js",[],"C:\\Users\\clowr\\Desktop\\code\\Fire-Watch\\src\\components\\Header.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":30,"column":6,"nodeType":"47","endLine":30,"endColumn":8,"suggestions":"48"},{"ruleId":"49","severity":1,"message":"50","line":14,"column":38,"nodeType":"51","messageId":"52","endLine":14,"endColumn":40},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'eventData'. Either include it or remove the dependency array.","ArrayExpression",["55"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"56","fix":"57"},"Update the dependencies array to be: [eventData]",{"range":"58","text":"59"},[820,822],"[eventData]"]